{"mappings":"imBAsBA,IAAAA,EACAC,E,iFArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,G,EAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,C,KCnBTE,EAAA,SAAAC,SAA8CC,KAAKC,MAAM,iGCAzD,MAAMC,EAAQC,SAASC,qBAAqB,SAAS,G,QCErDC,EAAiB,SAAUC,EAAWC,EAAQC,GAC5C,GAAID,IAAWE,KAAKC,SAASH,OAG3B,OAAOD,EAGP,IAAIK,EAASH,EAAQ,UAAYR,KAAKY,UAAUN,GAAa,IAAM,iBAAmBN,KAAKY,UAAUN,GAAa,KAClH,OAAOO,IAAIC,gBAAgB,IAAIC,KAAK,CAACJ,GAAS,CAC5CK,KAAM,2B,ECVZ,IAAIC,EAAG,IAAAJ,IAAuBf,EAAA,SAAAoB,QAA6C,SAAQC,OAAAC,KAAAC,KACnFC,EAAiBjB,EAAUY,EAAIM,WAAYN,EAAIV,QAAQ,GFDvD,MAAMiB,EAAS,IAAIC,OAAMH,GAsDzB,SAASI,EAAYC,EAAeC,GACnCD,EAAcE,WAAWC,aAAaF,EAASD,EAAcI,Y,CArD9DP,EAAOQ,UAAaC,IACnB,MAAMC,EAAc/B,SAASgC,eAAe,YAI5C,GAHoB,OAAhBD,GACHA,EAAYE,SAEc,IAAvBlC,EAAMmC,MAAM3C,OACf,OAED,MAAM4C,EAAOpC,EAAMmC,MAAM,GACzB,IAAIE,EAASpC,SAASqC,cAAc,KACpCD,EAAO5C,GAAK,iBACZ4C,EAAOE,KAAO5B,IAAIC,gBAAgB,IAAIC,KAAK,CAACkB,EAAOS,MAAO,CAAE1B,KAAMsB,EAAKtB,QACvEuB,EAAOI,SAAWL,EAAKM,KACvBL,EAAOM,UAAY,kBACnBnB,EAAYxB,EAAOqC,EAAO,EAG3BrC,EAAM4C,iBAAiB,UAAUC,MAAOC,IACvC,IAAIT,EAASpC,SAASgC,eAAe,kBAIrC,GAHe,OAAXI,GACHA,EAAOH,SAEmB,IAAvBlC,EAAMmC,MAAM3C,OACf,OAED,MAAM4C,EAAOpC,EAAMmC,MAAM,GACzBb,EAAOyB,kBAGR,SAAkBX,GACjB,OAAO,IAAIY,SAAQ,CAAChC,EAASiC,KAC5B,IAAIjB,EAAc/B,SAASqC,cAAc,QACzCN,EAAYvC,GAAK,WACjB+B,EAAYxB,EAAOgC,GAEnB,MAAMkB,EAAS,IAAIC,WACnBD,EAAON,iBAAiB,QAASQ,IAChCpB,EAAYqB,UAAY,gBACxBrC,EAAQoC,EAAME,OAAOC,OAAO,IAG7BL,EAAON,iBAAiB,YAAaQ,IACpC,GAAIA,EAAMI,QAAUJ,EAAMK,MAAO,CAChC,MAAMC,EAAUN,EAAOI,OAASJ,EAAMK,MAAS,IAC/CzB,EAAYqB,UAAY,YAAYM,KAAKC,MAAMF,K,KAGjDR,EAAOW,WAAWzB,EAAK,G,CArBC0B,CAAS1B,GAAM","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-77142abb30560565.js","src/index.js","node_modules/@parcel/runtime-js/lib/helpers/get-worker-url.js","node_modules/@parcel/runtime-js/lib/runtime-b1e77636aee8c7a7.js"],"sourcesContent":["\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"9vqfN\\\":\\\"index.3cc33179.js\\\",\\\"g5kKs\\\":\\\"worker.d94260d4.js\\\"}\"));","const input = document.getElementsByTagName(\"input\")[0];\nconst worker = new Worker(new URL('worker.js', import.meta.url), { type: 'module' });\n\nworker.onmessage = (output) => {\n\tconst progressBar = document.getElementById(\"progress\");\n\tif (progressBar !== null) {\n\t\tprogressBar.remove();\n\t}\n\tif (input.files.length === 0) {\n\t\treturn;\n\t}\n\tconst file = input.files[0];\n\tlet anchor = document.createElement(\"a\");\n\tanchor.id = \"downloadAnchor\";\n\tanchor.href = URL.createObjectURL(new Blob([output.data], { type: file.type }));\n\tanchor.download = file.name;\n\tanchor.innerText = \"Download output\";\n\tinsertAfter(input, anchor);\n}\n\ninput.addEventListener(\"change\", async (_) => {\n\tlet anchor = document.getElementById(\"downloadAnchor\");\n\tif (anchor !== null) {\n\t\tanchor.remove();\n\t}\n\tif (input.files.length === 0) {\n\t\treturn;\n\t}\n\tconst file = input.files[0];\n\tworker.postMessage(await readFile(file));\n});\n\nfunction readFile(file) {\n\treturn new Promise((resolve, _reject) => {\n\t\tlet progressBar = document.createElement(\"span\");\n\t\tprogressBar.id = \"progress\";\n\t\tinsertAfter(input, progressBar);\n\n\t\tconst reader = new FileReader();\n\t\treader.addEventListener('load', (event) => {\n\t\t\tprogressBar.innerHTML = \"Processing...\";\n\t\t\tresolve(event.target.result);\n\t\t});\n\n\t\treader.addEventListener('progress', (event) => {\n\t\t\tif (event.loaded && event.total) {\n\t\t\t\tconst percent = (event.loaded / event.total) * 100;\n\t\t\t\tprogressBar.innerHTML = `Uploaded ${Math.round(percent)}%`;\n\t\t\t}\n\t\t});\n\t\treader.readAsText(file);\n\t});\n}\n\n// src: https://stackoverflow.com/a/4793630/6798201\nfunction insertAfter(referenceNode, newNode) {\n\treferenceNode.parentNode.insertBefore(newNode, referenceNode.nextSibling);\n}\n","\"use strict\";\n\nmodule.exports = function (workerUrl, origin, isESM) {\n  if (origin === self.location.origin) {\n    // If the worker bundle's url is on the same origin as the document,\n    // use the worker bundle's own url.\n    return workerUrl;\n  } else {\n    // Otherwise, create a blob URL which loads the worker bundle with `importScripts`.\n    var source = isESM ? 'import ' + JSON.stringify(workerUrl) + ';' : 'importScripts(' + JSON.stringify(workerUrl) + ');';\n    return URL.createObjectURL(new Blob([source], {\n      type: 'application/javascript'\n    }));\n  }\n};","let workerURL = require('./helpers/get-worker-url');\nlet url = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"g5kKs\"));\nmodule.exports = workerURL(url.toString(), url.origin, true);"],"names":["$18c11f3350a906ea$export$6503ec6e8aabbaf","$18c11f3350a906ea$export$f7ad0328861e2f03","$18c11f3350a906ea$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","parcelRequire","register","JSON","parse","$35da740d59af89ba$var$input","document","getElementsByTagName","$56b621a6dd25b2cb$exports","workerUrl","origin","isESM","self","location","source","stringify","URL","createObjectURL","Blob","type","$dde6d2ad56f1d070$var$url","resolve","import","meta","url","$dde6d2ad56f1d070$exports","toString","$35da740d59af89ba$var$worker","Worker","$35da740d59af89ba$var$insertAfter","referenceNode","newNode","parentNode","insertBefore","nextSibling","onmessage","output","progressBar","getElementById","remove","files","file","anchor","createElement","href","data","download","name","innerText","addEventListener","async","_","postMessage","Promise","_reject","reader","FileReader","event","innerHTML","target","result","loaded","total","percent","Math","round","readAsText","$35da740d59af89ba$var$readFile"],"version":3,"file":"index.3cc33179.js.map"}